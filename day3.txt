Q.1 Explain what HTTP is and how it is Unidirectional?
=======================================================
Step 1: Direct browser to URL
eg -
https://github.com/RavSinghChandan/OS101-Assignments-

Step 2: Browser looks up IP

Step 3: Browser sends HTTP request

Step 4: Host sends back HTTP response

Step 5: The browser renders the response

HTTP protocol: HTTP is unidirectional where the client
 sends the request and the server sends the response.
 Let’s take an example when a user sends a request to 
the server this request goes in the form of HTTP or HTTPS,
 after receiving a request server send the response to 

the client, each request is associated with a corresponding response,
 after sending the response the connection gets closed, each HTTP
 or HTTPS request establish the new connection to the server
 every time and after getting the response the connection gets 
terminated by itself. 

HTTP is a stateless protocol that runs on top of TCP which 
is a connection-oriented protocol it guarantees the delivery 
of data packet transfer using the three-way handshaking methods 
and re-transmits the lost packets. 

=====================================================
Q.2 What is IPv4 and IPv6

 IPv4-
1.IPv4 has a 32-bit address length
2.It Supports Manual and DHCP address configuration
3.In IPv4 end to end, connection integrity is Unachievable
4.It can generate 4.29×109 address space
5.The Security feature is dependent on application
6.Address representation of IPv4 is in decimal
7.Fragmentation performed by Sender and forwarding routers
IPv6-
1.IPv6 has a 128-bit address length
2.It supports Auto and renumbering address configuration
3.In IPv6 end to end, connection integrity is Achievable
4.Address space of IPv6 is quite large it can produce 3.4×1038 address space
5.IPSEC is an inbuilt security feature in the IPv6 protocol
6.Address Representation of IPv6 is in hexadecimal
7.In IPv6 fragmentation performed only by the sender

===========================================================
Q.3 What is DNS?

(Domain Name System) The Internet's system for converting
 alphabetic names into numeric IP addresses. For example,
 when a Web address (URL) is typed into a browser, 
DNS servers return the IP address of the Web server
 associated with that name. 

the DNS converts the URL www.company.com into the 
IP address 204.0.8.51. Without DNS, you would have 
to type the series of four numbers and dots into 
your browser to retrieve the website, which you 
actually can do. See IP address.

==========================================================
Q.4 Explain what CDN is ?

A content delivery network (CDN) refers to a geographically
 distributed group of servers which work together to provide 
fast delivery of Internet content.

A CDN allows for the quick transfer of assets needed for loading 
Internet content including HTML pages, javascript files,
 stylesheets, images, and videos. The popularity of CDN 
services continues to grow, and today the majority of web 
traffic is served through CDNs, including traffic from major 
sites like Facebook, Netflix, and Amazon.

================================================================
Q.5 What is a DeadLock?

A process in operating system uses resources in the following way. 
1) Requests a resource 
2) Use the resource 
3) Releases the resource 


Deadlock is a situation where a set of processes are blocked
 because each process is holding a resource and waiting for
 another resource acquired by some other process. 

Consider an example when two trains are coming toward 
each other on the same track and there is only one track, 
none of the trains can move once they are in front of each other.
 A similar situation occurs in operating systems when there 
are two or more processes that hold some resources and wait 
for resources held by other(s). For example, in the below diagram,
 Process 1 is holding Resource 1 and waiting for resource 2 
which is acquired by process 2, and process 2 is waiting for resource 1. 




